#pragma once

const char* PostShaderVertex = "#version 330 core\n"
                               "\n"
                               "layout (location = 0) in vec2 inPosition;\n"
                               "\n"
                               "uniform float time;\n"
                               "uniform float strength;\n"
                               "uniform bool hasShake = false;\n"
                               "\n"
                               "out vec2 textureCoords;\n"
                               "\n"
                               "void main(){\n"
                               "    textureCoords = (inPosition + 1.0) / 2.0;\n"
                               "    gl_Position = vec4(inPosition, 0.0, 1.0);\n"
                               "    if(hasShake){\n"
                               "        gl_Position.x += cos(time * 10) * strength;\n"
                               "        gl_Position.y += cos(time * 15) * strength;\n"
                               "    }\n"
                               "}";

const char* PostShaderFragment = "#version 330 core\n"
                                 "\n"
                                 "in vec2 textureCoords;\n"
                                 "\n"
                                 "uniform sampler2D screenTexture;\n"
                                 "uniform bool hasGrayscale = false;\n"
                                 "uniform bool hasContrast = false;\n"
                                 "uniform float contrast;\n"
                                 "\n"
                                 "out vec4 fragColor;\n"
                                 "\n"
                                 "void main(){\n"
                                 "    vec4 fragment = texture(screenTexture, textureCoords);\n"
                                 "    if(hasGrayscale){\n"
                                 "        fragment = texture(screenTexture, textureCoords);\n"
                                 "        float average = 0.2126 * fragment.r + 0.7152 * fragment.g + 0.0722 * fragment.b;\n"
                                 "        fragment = vec4(average, average, average, 1.0);\n"
                                 "    }\n"
                                 "    if(hasContrast){\n"
                                 "        fragment.rgb = (fragment.rgb - 0.5) * (1.0 + contrast) + 0.5;\n"
                                 "    }\n"
                                 "    fragColor = fragment;\n"
                                 "}";

const char* PostShaderBloomVertex = "#version 330 core\n"
                                    "\n"
                                    "layout (location = 0) in vec2 inPosition;\n"
                                    "\n"
                                    "out vec2 TexCoords;\n"
                                    "\n"
                                    "void main(){\n"
                                    "    TexCoords = (inPosition + 1.0) / 2.0;\n"
                                    "    gl_Position = vec4(inPosition.x, inPosition.y, 0.0, 1.0);\n"
                                    "}";

const char* PostShaderBloomFragment = "#version 330 core\n"
                                      "\n"
                                      "out vec4 FragColor;\n"
                                      "\n"
                                      "in vec2 TexCoords;\n"
                                      "\n"
                                      "uniform sampler2D screenTexture;\n"
                                      "\n"
                                      "void main(){\n"
                                      "    FragColor = texture(screenTexture, TexCoords);\n"
                                      "    float brightness = dot(FragColor.rgb, vec3(0.2126, 0.7152, 0.0722));\n"
                                      "    if(brightness > 0.7)\n"
                                      "        FragColor = vec4(FragColor.rgb, 1.0);\n"
                                      "    else\n"
                                      "        FragColor = vec4(0.0, 0.0, 0.0, 1.0);\n"
                                      "}";

const char* PostShaderBlurVVertex = "#version 330 core\n"
                                    "\n"
                                    "layout (location = 0) in vec2 inPosition;\n"
                                    "\n"
                                    "out vec2 textureCoords[11];\n"
                                    "\n"
                                    "uniform float targetFrameBufferHeight;\n"
                                    "\n"
                                    "void main(void){\n"
                                    "    gl_Position = vec4(inPosition, 0.0, 1.0);\n"
                                    "    vec2 centerTextureCoords = inPosition * 0.5 + 0.5;\n"
                                    "    float pixelSize = 1.0 / targetFrameBufferHeight;\n"
                                    "    for(int i = -5; i <= 5; i++){\n"
                                    "        textureCoords[i + 5] = centerTextureCoords + vec2(0.0, pixelSize * i);\n"
                                    "    }\n"
                                    "}";

const char* PostShaderBlurHVertex = "#version 330 core\n"
                                    "\n"
                                    "layout (location = 0) in vec2 inPosition;\n"
                                    "\n"
                                    "out vec2 textureCoords[11];\n"
                                    "\n"
                                    "uniform float targetFrameBufferWidth;\n"
                                    "\n"
                                    "void main(void){\n"
                                    "    gl_Position = vec4(inPosition, 0.0, 1.0);\n"
                                    "    vec2 centerTextureCoords = inPosition * 0.5 + 0.5;\n"
                                    "    float pixelSize = 1.0 / targetFrameBufferWidth;\n"
                                    "    for(int i = -5; i <= 5; i++){\n"
                                    "        textureCoords[i + 5] = centerTextureCoords + vec2(pixelSize * i, 0.0);\n"
                                    "    }\n"
                                    "}";

const char* PostShaderBlurFragment = "#version 330 core\n"
                                      "\n"
                                      "in vec2 textureCoords[11];\n"
                                      "\n"
                                      "uniform sampler2D screenTexture;\n"
                                      "\n"
                                      "out vec4 fragColor;\n"
                                      "\n"
                                      "void main(void){\n"
                                      "    fragColor = vec4(0.0);\n"
                                      "    fragColor += texture(screenTexture, textureCoords[0]) * 0.0093;\n"
                                      "    fragColor += texture(screenTexture, textureCoords[1]) * 0.028002;\n"
                                      "    fragColor += texture(screenTexture, textureCoords[2]) * 0.065984;\n"
                                      "    fragColor += texture(screenTexture, textureCoords[3]) * 0.121703;\n"
                                      "    fragColor += texture(screenTexture, textureCoords[4]) * 0.175713;\n"
                                      "    fragColor += texture(screenTexture, textureCoords[5]) * 0.198596;\n"
                                      "    fragColor += texture(screenTexture, textureCoords[6]) * 0.175713;\n"
                                      "    fragColor += texture(screenTexture, textureCoords[7]) * 0.121703;\n"
                                      "    fragColor += texture(screenTexture, textureCoords[8]) * 0.065984;\n"
                                      "    fragColor += texture(screenTexture, textureCoords[9]) * 0.028002;\n"
                                      "    fragColor += texture(screenTexture, textureCoords[10]) * 0.0093;\n"
                                      "}";